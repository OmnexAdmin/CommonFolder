<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-FLV1Q8H" ignored="0" name="Default test" tests="12" failures="0" timestamp="20 Feb 2020 10:15:19 GMT" time="1.476" errors="0">
  <testcase name="@AfterMethod afterMethod" time="0.784" classname="CommonMethods.ProjectMethods">
    <failure type="java.lang.RuntimeException" message="FAILED">
      <![CDATA[java.lang.RuntimeException: FAILED
	at Utilities.Reporter.reportStep(Reporter.java:33)
	at Utilities.Reporter.reportStep(Reporter.java:43)
	at CommonMethods.SeMethods.closeAllBrowsers(SeMethods.java:549)
	at CommonMethods.ProjectMethods.afterMethod(ProjectMethods.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:723)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="CommonMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="createParentLevels" time="0.005" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
  <testcase name="createParentLevels" time="0.0" classname="TestCases.DocProBasicFunctionality">
    <skipped/>
  </testcase> <!-- createParentLevels -->
</testsuite> <!-- Default test -->
